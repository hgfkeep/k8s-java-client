/*
 * Kubernetes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: master
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.kubernetes.client.models;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.kubernetes.client.models.V1EventSource;
import io.kubernetes.client.models.V1ObjectMeta;
import io.kubernetes.client.models.V1ObjectReference;
import io.kubernetes.client.models.V1beta1EventSeries;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.joda.time.DateTime;

/**
 * Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system.
 */
@ApiModel(description = "Event is a report of an event somewhere in the cluster. It generally denotes some state change in the system.")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2020-03-20T06:31:18.419Z[Etc/UTC]")
public class V1beta1Event {
  public static final String SERIALIZED_NAME_ACTION = "action";
  @SerializedName(SERIALIZED_NAME_ACTION)
  private String action;

  public static final String SERIALIZED_NAME_API_VERSION = "apiVersion";
  @SerializedName(SERIALIZED_NAME_API_VERSION)
  private String apiVersion;

  public static final String SERIALIZED_NAME_DEPRECATED_COUNT = "deprecatedCount";
  @SerializedName(SERIALIZED_NAME_DEPRECATED_COUNT)
  private Integer deprecatedCount;

  public static final String SERIALIZED_NAME_DEPRECATED_FIRST_TIMESTAMP = "deprecatedFirstTimestamp";
  @SerializedName(SERIALIZED_NAME_DEPRECATED_FIRST_TIMESTAMP)
  private DateTime deprecatedFirstTimestamp;

  public static final String SERIALIZED_NAME_DEPRECATED_LAST_TIMESTAMP = "deprecatedLastTimestamp";
  @SerializedName(SERIALIZED_NAME_DEPRECATED_LAST_TIMESTAMP)
  private DateTime deprecatedLastTimestamp;

  public static final String SERIALIZED_NAME_DEPRECATED_SOURCE = "deprecatedSource";
  @SerializedName(SERIALIZED_NAME_DEPRECATED_SOURCE)
  private V1EventSource deprecatedSource;

  public static final String SERIALIZED_NAME_EVENT_TIME = "eventTime";
  @SerializedName(SERIALIZED_NAME_EVENT_TIME)
  private DateTime eventTime;

  public static final String SERIALIZED_NAME_KIND = "kind";
  @SerializedName(SERIALIZED_NAME_KIND)
  private String kind;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private V1ObjectMeta metadata;

  public static final String SERIALIZED_NAME_NOTE = "note";
  @SerializedName(SERIALIZED_NAME_NOTE)
  private String note;

  public static final String SERIALIZED_NAME_REASON = "reason";
  @SerializedName(SERIALIZED_NAME_REASON)
  private String reason;

  public static final String SERIALIZED_NAME_REGARDING = "regarding";
  @SerializedName(SERIALIZED_NAME_REGARDING)
  private V1ObjectReference regarding;

  public static final String SERIALIZED_NAME_RELATED = "related";
  @SerializedName(SERIALIZED_NAME_RELATED)
  private V1ObjectReference related;

  public static final String SERIALIZED_NAME_REPORTING_CONTROLLER = "reportingController";
  @SerializedName(SERIALIZED_NAME_REPORTING_CONTROLLER)
  private String reportingController;

  public static final String SERIALIZED_NAME_REPORTING_INSTANCE = "reportingInstance";
  @SerializedName(SERIALIZED_NAME_REPORTING_INSTANCE)
  private String reportingInstance;

  public static final String SERIALIZED_NAME_SERIES = "series";
  @SerializedName(SERIALIZED_NAME_SERIES)
  private V1beta1EventSeries series;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private String type;


  public V1beta1Event action(String action) {
    
    this.action = action;
    return this;
  }

   /**
   * What action was taken/failed regarding to the regarding object.
   * @return action
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "What action was taken/failed regarding to the regarding object.")

  public String getAction() {
    return action;
  }


  public void setAction(String action) {
    this.action = action;
  }


  public V1beta1Event apiVersion(String apiVersion) {
    
    this.apiVersion = apiVersion;
    return this;
  }

   /**
   * APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
   * @return apiVersion
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources")

  public String getApiVersion() {
    return apiVersion;
  }


  public void setApiVersion(String apiVersion) {
    this.apiVersion = apiVersion;
  }


  public V1beta1Event deprecatedCount(Integer deprecatedCount) {
    
    this.deprecatedCount = deprecatedCount;
    return this;
  }

   /**
   * Deprecated field assuring backward compatibility with core.v1 Event type
   * @return deprecatedCount
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated field assuring backward compatibility with core.v1 Event type")

  public Integer getDeprecatedCount() {
    return deprecatedCount;
  }


  public void setDeprecatedCount(Integer deprecatedCount) {
    this.deprecatedCount = deprecatedCount;
  }


  public V1beta1Event deprecatedFirstTimestamp(DateTime deprecatedFirstTimestamp) {
    
    this.deprecatedFirstTimestamp = deprecatedFirstTimestamp;
    return this;
  }

   /**
   * Deprecated field assuring backward compatibility with core.v1 Event type
   * @return deprecatedFirstTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated field assuring backward compatibility with core.v1 Event type")

  public DateTime getDeprecatedFirstTimestamp() {
    return deprecatedFirstTimestamp;
  }


  public void setDeprecatedFirstTimestamp(DateTime deprecatedFirstTimestamp) {
    this.deprecatedFirstTimestamp = deprecatedFirstTimestamp;
  }


  public V1beta1Event deprecatedLastTimestamp(DateTime deprecatedLastTimestamp) {
    
    this.deprecatedLastTimestamp = deprecatedLastTimestamp;
    return this;
  }

   /**
   * Deprecated field assuring backward compatibility with core.v1 Event type
   * @return deprecatedLastTimestamp
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Deprecated field assuring backward compatibility with core.v1 Event type")

  public DateTime getDeprecatedLastTimestamp() {
    return deprecatedLastTimestamp;
  }


  public void setDeprecatedLastTimestamp(DateTime deprecatedLastTimestamp) {
    this.deprecatedLastTimestamp = deprecatedLastTimestamp;
  }


  public V1beta1Event deprecatedSource(V1EventSource deprecatedSource) {
    
    this.deprecatedSource = deprecatedSource;
    return this;
  }

   /**
   * Get deprecatedSource
   * @return deprecatedSource
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1EventSource getDeprecatedSource() {
    return deprecatedSource;
  }


  public void setDeprecatedSource(V1EventSource deprecatedSource) {
    this.deprecatedSource = deprecatedSource;
  }


  public V1beta1Event eventTime(DateTime eventTime) {
    
    this.eventTime = eventTime;
    return this;
  }

   /**
   * Required. Time when this Event was first observed.
   * @return eventTime
  **/
  @ApiModelProperty(required = true, value = "Required. Time when this Event was first observed.")

  public DateTime getEventTime() {
    return eventTime;
  }


  public void setEventTime(DateTime eventTime) {
    this.eventTime = eventTime;
  }


  public V1beta1Event kind(String kind) {
    
    this.kind = kind;
    return this;
  }

   /**
   * Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
   * @return kind
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds")

  public String getKind() {
    return kind;
  }


  public void setKind(String kind) {
    this.kind = kind;
  }


  public V1beta1Event metadata(V1ObjectMeta metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1ObjectMeta getMetadata() {
    return metadata;
  }


  public void setMetadata(V1ObjectMeta metadata) {
    this.metadata = metadata;
  }


  public V1beta1Event note(String note) {
    
    this.note = note;
    return this;
  }

   /**
   * Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.
   * @return note
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Optional. A human-readable description of the status of this operation. Maximal length of the note is 1kB, but libraries should be prepared to handle values up to 64kB.")

  public String getNote() {
    return note;
  }


  public void setNote(String note) {
    this.note = note;
  }


  public V1beta1Event reason(String reason) {
    
    this.reason = reason;
    return this;
  }

   /**
   * Why the action was taken.
   * @return reason
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Why the action was taken.")

  public String getReason() {
    return reason;
  }


  public void setReason(String reason) {
    this.reason = reason;
  }


  public V1beta1Event regarding(V1ObjectReference regarding) {
    
    this.regarding = regarding;
    return this;
  }

   /**
   * Get regarding
   * @return regarding
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1ObjectReference getRegarding() {
    return regarding;
  }


  public void setRegarding(V1ObjectReference regarding) {
    this.regarding = regarding;
  }


  public V1beta1Event related(V1ObjectReference related) {
    
    this.related = related;
    return this;
  }

   /**
   * Get related
   * @return related
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1ObjectReference getRelated() {
    return related;
  }


  public void setRelated(V1ObjectReference related) {
    this.related = related;
  }


  public V1beta1Event reportingController(String reportingController) {
    
    this.reportingController = reportingController;
    return this;
  }

   /**
   * Name of the controller that emitted this Event, e.g. &#x60;kubernetes.io/kubelet&#x60;.
   * @return reportingController
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`.")

  public String getReportingController() {
    return reportingController;
  }


  public void setReportingController(String reportingController) {
    this.reportingController = reportingController;
  }


  public V1beta1Event reportingInstance(String reportingInstance) {
    
    this.reportingInstance = reportingInstance;
    return this;
  }

   /**
   * ID of the controller instance, e.g. &#x60;kubelet-xyzf&#x60;.
   * @return reportingInstance
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "ID of the controller instance, e.g. `kubelet-xyzf`.")

  public String getReportingInstance() {
    return reportingInstance;
  }


  public void setReportingInstance(String reportingInstance) {
    this.reportingInstance = reportingInstance;
  }


  public V1beta1Event series(V1beta1EventSeries series) {
    
    this.series = series;
    return this;
  }

   /**
   * Get series
   * @return series
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public V1beta1EventSeries getSeries() {
    return series;
  }


  public void setSeries(V1beta1EventSeries series) {
    this.series = series;
  }


  public V1beta1Event type(String type) {
    
    this.type = type;
    return this;
  }

   /**
   * Type of this event (Normal, Warning), new types could be added in the future.
   * @return type
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "Type of this event (Normal, Warning), new types could be added in the future.")

  public String getType() {
    return type;
  }


  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    V1beta1Event v1beta1Event = (V1beta1Event) o;
    return Objects.equals(this.action, v1beta1Event.action) &&
        Objects.equals(this.apiVersion, v1beta1Event.apiVersion) &&
        Objects.equals(this.deprecatedCount, v1beta1Event.deprecatedCount) &&
        Objects.equals(this.deprecatedFirstTimestamp, v1beta1Event.deprecatedFirstTimestamp) &&
        Objects.equals(this.deprecatedLastTimestamp, v1beta1Event.deprecatedLastTimestamp) &&
        Objects.equals(this.deprecatedSource, v1beta1Event.deprecatedSource) &&
        Objects.equals(this.eventTime, v1beta1Event.eventTime) &&
        Objects.equals(this.kind, v1beta1Event.kind) &&
        Objects.equals(this.metadata, v1beta1Event.metadata) &&
        Objects.equals(this.note, v1beta1Event.note) &&
        Objects.equals(this.reason, v1beta1Event.reason) &&
        Objects.equals(this.regarding, v1beta1Event.regarding) &&
        Objects.equals(this.related, v1beta1Event.related) &&
        Objects.equals(this.reportingController, v1beta1Event.reportingController) &&
        Objects.equals(this.reportingInstance, v1beta1Event.reportingInstance) &&
        Objects.equals(this.series, v1beta1Event.series) &&
        Objects.equals(this.type, v1beta1Event.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, apiVersion, deprecatedCount, deprecatedFirstTimestamp, deprecatedLastTimestamp, deprecatedSource, eventTime, kind, metadata, note, reason, regarding, related, reportingController, reportingInstance, series, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class V1beta1Event {\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    apiVersion: ").append(toIndentedString(apiVersion)).append("\n");
    sb.append("    deprecatedCount: ").append(toIndentedString(deprecatedCount)).append("\n");
    sb.append("    deprecatedFirstTimestamp: ").append(toIndentedString(deprecatedFirstTimestamp)).append("\n");
    sb.append("    deprecatedLastTimestamp: ").append(toIndentedString(deprecatedLastTimestamp)).append("\n");
    sb.append("    deprecatedSource: ").append(toIndentedString(deprecatedSource)).append("\n");
    sb.append("    eventTime: ").append(toIndentedString(eventTime)).append("\n");
    sb.append("    kind: ").append(toIndentedString(kind)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("    reason: ").append(toIndentedString(reason)).append("\n");
    sb.append("    regarding: ").append(toIndentedString(regarding)).append("\n");
    sb.append("    related: ").append(toIndentedString(related)).append("\n");
    sb.append("    reportingController: ").append(toIndentedString(reportingController)).append("\n");
    sb.append("    reportingInstance: ").append(toIndentedString(reportingInstance)).append("\n");
    sb.append("    series: ").append(toIndentedString(series)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

